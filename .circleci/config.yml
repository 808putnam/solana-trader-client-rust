version: 2.1
executors:
  bxrust:
    docker:
      - image: cimg/rust:1.82.0
    environment:
      CARGO_HOME: /home/circleci/cargo
      WORKSPACE: /home/circleci/cargo/src/github.com/bloXroute-Labs/solana-trader-client-rust
      RUSTFLAGS: "-D warnings"
      PROTOC: /usr/bin/protoc  # Explicitly set protoc path
    working_directory: /home/circleci/cargo/src/github.com/bloXroute-Labs/solana-trader-client-rust

jobs:
  init:
    executor: bxrust
    steps:
      - attach_workspace:
          at: /home/circleci/cargo
      - checkout
      - restore_cache:
          keys:
            - v1-cargo-cache-{{ checksum "Cargo.lock" }}
      - run:
          name: Create necessary directories
          command: |
            mkdir -p /home/circleci/cargo/src/github.com/bloXroute-Labs
            mkdir -p target
      - run:
          name: Update/install packages
          command: |
            sudo apt update
            sudo apt install -y awscli protobuf-compiler
            which protoc
            protoc --version
            echo "PROTOC=${PROTOC}"
      - run:
          name: Install Rust components
          command: |
            rustup component add clippy
            rustup component add rustfmt
      - run:
          name: Update dependencies
          command: |
            cargo update
            cargo clean
            RUST_BACKTRACE=1 cargo build -v
      - save_cache:
          key: v1-cargo-cache-{{ checksum "Cargo.lock" }}
          paths:
            - "/home/circleci/cargo/registry"
            - "target"
      - persist_to_workspace:
          root: /home/circleci/cargo/
          paths:
            - src
            - registry
            - bin
            - target

  unit:
    executor: bxrust
    steps:
      - attach_workspace:
          at: /home/circleci/cargo
      - run:
          name: Install protoc
          command: |
            sudo apt update
            sudo apt install -y protobuf-compiler
      - run:
          name: Unit test
          command: cargo test

workflows:
  version: 2
  test-branch:
    when:
      not:
        equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
    jobs:
      - init:
          context: circleci
      - unit:
          requires:
            - init